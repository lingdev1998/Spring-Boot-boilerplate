spring.application.name=example
spring.jackson.property-naming-strategy=SNAKE_CASE

#SERVER PORT
server.port=${PORT:8080}

#config luc dau
jwt.secret=javainuse 



#Database

spring.datasource.url=${DATABASE_URL:}

spring.datasource.username=${DATABASE_USERNAME:}

spring.datasource.password=${DATABASE_PASSWORD:}

spring.datasource.driverClassName=${DATABASE_DRIVER:}

spring.jpa.properties.hibernate.dialect=${SPRING_JPA_HIBERNATE_DIALECT:}



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
#
## Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

#included in response when throwing ...
server.error.include-message=always

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/linkdoan/uploads


spring.data.ldap.repositories.enabled=false
